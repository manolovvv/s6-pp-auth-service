# This is a basic workflow to help you get started with Actions

name: CI Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      
      - name: Auth
        id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
         credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
         create_credentials_file: true
         

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'
        
      - name: 'Use gcloud CLI'
        run: 'gcloud info'
      
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=manolovvv_s6-pp-auth-service
          
#      - name: Set up Java version
#         uses: actions/setup-java@v2
#         with:
#            distribution: 'temurin'
#            java-version: '8'

#       - name: Analyze with SonarCloud
#         run: ./mvnw -B verify sonar:sonar -Dsonar.projectKey=s6-pp-api-gateway -Dsonar.organization=manolovvv -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
      - name: Build java app
        run: ./mvnw clean package


        
      - name: Build and push Docker
        run: |
          gcloud auth login --brief --cred-file="${{ steps.auth.outputs.credentials_file_path }}"
          gcloud auth configure-docker europe-docker.pkg.dev
          docker build -t europe-west4-docker.pkg.dev/thematic-mapper-351607/kalve/auth-service:latest .
          docker image push europe-west4-docker.pkg.dev/thematic-mapper-351607/kalve/auth-service:latest
        
